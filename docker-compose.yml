services:
  mysql:
    container_name: legacy-mysql
    image: mysql:5.7
    platform: linux/x86_64
    restart: always
    attach: false
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW --server-id=1
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
    - '3306:3306'
    expose:
    - '3306'
    volumes:
    - my_db:/var/lib/mysql
  jobmanager:
    container_name: jobmanager
    platform: linux/arm64/v8
    hostname: jobmanager
    build:
      context: ./images/pyflink
      dockerfile: .Dockerfile
    ports:
    - "8081:8081"
    command: jobmanager
    attach: false
    restart: always
    volumes:
    - ./datasets:/opt/flink/datasets
    - ./flink_checkpoints:/opt/flink/checkpoints
    environment:
    - |
      FLINK_PROPERTIES=
      jobmanager.rpc.address: jobmanager
      jobmanager.memory.process.size: 2500m
      jobstore.max-capacity: 8
      jobstore.type: file
      state.checkpoint-storage: filesystem
      state.checkpoints.dir: file:///opt/flink/checkpoints
      state.checkpoints.num-retained: 3
      execution.checkpointing.interval: 1000
      execution.checkpointing.min-pause: 500
      execution.checkpointing.tolerable-failed-checkpoints: 2 
      execution.checkpointing.timeout: 60000
      execution.checkpointing.unaligned.enabled: true
      execution.checkpointing.externalized-checkpoint-retention: DELETE_ON_CANCELLATION
      rest.flamegraph.enabled: true
  taskmanager:
    container_name: taskmanager
    platform: linux/arm64/v8
    attach: false
    restart: always
    build:
      context: ./images/pyflink
      dockerfile: .Dockerfile
    depends_on:
    - jobmanager
    command: taskmanager
    volumes:
    - ./datasets:/opt/flink/datasets
    scale: 1
    environment:
    - |
      FLINK_PROPERTIES=
      jobmanager.rpc.address: jobmanager
      taskmanager.numberOfTaskSlots: 8
      parallelism.default: 1
      taskmanager.memory.process.size: 11500m
      taskmanager.memory.flink.size: 10000m
      taskmanager.memory.managed.size: 1500m
      taskmanager.memory.task.heap.size: 1800m
      taskmanager.memory.task.off-heap.size: 1000m
      taskmanager.memory.framework.off-heap.size: 2700m
      taskmanager.memory.framework.heap.size: 1800m
      taskmanager.memory.jvm-metaspace.size: 1200m
    links:
      - mysql:db
  pyflink-client:
    platform: linux/arm64/v8
    container_name: pyflink-client
    depends_on:
    - taskmanager
    build:
      context: ./images/pyflink
      dockerfile: .Dockerfile
    command: >
      bash -c  "python ./project/main.py"
    environment:
    - DATABASE=production
    - DB_HOST=mysql
    - DB_USER=root
    - DB_PASSWORD=password
    - ENV=development
    - DB_CONFIG=/opt/flink/project/configs/database.json
    - PROCESS_CONFIG_PATH=/opt/flink/project/configs/process_config.json
    - DEBEZIUM_CONFIG_FILE_PATH=/opt/flink/project/configs/debezium.json
    - SCRIPTS_PATH_DIR=/opt/flink/project/scripts
    - CONNECT_URL=http://kafka-connect:8083
    - KAFKA_SERVERS=broker:29092
    - ELASTICSEARCH_URL=elasticsearch:9200
    - MINIO_HOST=minio:9000
    - MINIO_USER=bar
    - MINIO_PASSWORD=Strong#Pass#2022
    - SINK_BUCKET=raw-zone
    volumes:
    - ./flink_process:/opt/flink/ops
    - ./jars:/opt/flink/opt
    - ./datasets:/opt/flink/datasets
    - .:/opt/flink/project
    - ./flink_checkpoints:/opt/flink/checkpoints
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
    scale: 1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    attach: false
    container_name: elasticsearch
    platform: linux/amd64
    environment:
    - xpack.security.enabled=false
    - discovery.type=single-node
    - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
    - 9200:9200
    - 9300:9300
    volumes:
    - ./elasticsearch_vol:/usr/share/elasticsearch/data
  kibana:
    container_name: kibana
    attach: false
    image: docker.elastic.co/kibana/kibana:8.12.1
    environment:
    - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
    - 5601:5601
    depends_on:
    - elasticsearch
  minio:
    container_name: minio
    image: minio/minio
    attach: false
    ports:
    - "9000:9000"
    - "9001:9001"
    volumes:
    - minio_storage:/data
    environment:
      MINIO_ROOT_USER: bar
      MINIO_ROOT_PASSWORD: Strong#Pass#2022
    command: server --console-address ":9001" /data
  neo:
    container_name: neo4j
    attach: false
    image: neo4j:latest
    environment:
    - NEO4J_AUTH=none
    ports: 
    - 7474:7474
    - 7687:7687
    volumes:
    - neo4j_data:/data/
volumes:
  my_db:
  minio_storage:
  elasticsearch_vol:
  flink_checkpoints:
  neo4j_data: